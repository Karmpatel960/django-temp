name: django-app

services:
  web:
    build: .
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1'
          memory: 1G
    environment:
      - DEBUG=0
      - SECRET_KEY=${SECRET_KEY:-your_default_secret_key}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,web,*}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@db:5432/postgres}
      - USE_S3=1
      # AWS S3 settings
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME:-}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:13-alpine
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.23-alpine
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data: